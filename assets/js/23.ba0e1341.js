(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{188:function(e,t,r){"use strict";r.r(t);var a=r(0),n=Object(a.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"object属性系列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object属性系列","aria-hidden":"true"}},[e._v("#")]),e._v(" Object属性系列")]),e._v(" "),r("blockquote",[r("p",[e._v("Object.defineProperty(obj, prop, descriptor)")])]),e._v(" "),r("blockquote",[r("p",[e._v("属性描述符\n对象里目前存在的属性描述符有两种主要形式：数据描述符和存取描述符。数据描述符是一个具有值的属性，该值可能是可写的，也可能不是可写的。存取描述符是由getter-setter函数对描述的属性。描述符必须是这两种形式之一；不能同时是两者。")])]),e._v(" "),r("blockquote",[r("p",[e._v("数据描述符和存取描述符均具有以下可选键值(默认值是在使用Object.defineProperty()定义属性的情况下)：")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("configurable\n当且仅当该属性的 configurable 为 true 时，该属性描述符才能够被改变，同时该属性也能从对应的对象上被删除。默认为 false。\nenumerable\n当且仅当该属性的enumerable为true时，该属性才能够出现在对象的枚举属性中。默认为 false。\n数据描述符同时具有以下可选键值：\n\nvalue\n该属性对应的值。可以是任何有效的 JavaScript 值（数值，对象，函数等）。默认为 undefined。\nwritable\n当且仅当该属性的writable为true时，value才能被赋值运算符改变。默认为 false。\n存取描述符同时具有以下可选键值：\n\nget\n一个给属性提供 getter 的方法，如果没有 getter 则为 undefined。当访问该属性时，该方法会被执行，方法执行时没有参数传入，但是会传入this对象（由于继承关系，这里的this并不一定是定义该属性的对象）。\n默认为 undefined。\nset\n一个给属性提供 setter 的方法，如果没有 setter 则为 undefined。当属性值修改时，触发执行该方法。该方法将接受唯一参数，即该属性新的参数值。\n默认为 undefined。\n\t>configurable enumerable\t   value\t   writable\t   get\t   set  \n  >数据描述符\tYes\tYes\tYes\tYes\tNo\tNo\n  >存取描述符\tYes\tYes\tNo\tNo\tYes\tYes\n")])])]),r("h2",{attrs:{id:"getownpropertydescriptors"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#getownpropertydescriptors","aria-hidden":"true"}},[e._v("#")]),e._v(" getOwnPropertyDescriptors")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("var o = {a:1}\nvar descriptors_o =  Object.getOwnPropertyDescriptors(o)\n{\n  a: {\n    configurable: true,\n    enumerable: true,\n    value: 1,\n    writable: true\n  }\n}\n")])])]),r("h2",{attrs:{id:"object-getownpropertynames-方法返回一个由指定对象的所有自身属性的属性名（包括不可枚举属性但不包括symbol值作为名称的属性）组成的数组。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-getownpropertynames-方法返回一个由指定对象的所有自身属性的属性名（包括不可枚举属性但不包括symbol值作为名称的属性）组成的数组。","aria-hidden":"true"}},[e._v("#")]),e._v(" Object.getOwnPropertyNames()方法返回一个由指定对象的所有自身属性的属性名（包括不可枚举属性但不包括Symbol值作为名称的属性）组成的"),r("strong",[e._v("数组")]),e._v("。")]),e._v(" "),r("h2",{attrs:{id:"hasownproperty-方法会返回一个布尔值，指示对象自身属性中是否具有指定的属性（也就是，是否有指定的键）。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hasownproperty-方法会返回一个布尔值，指示对象自身属性中是否具有指定的属性（也就是，是否有指定的键）。","aria-hidden":"true"}},[e._v("#")]),e._v(" hasOwnProperty() 方法会返回一个布尔值，指示对象自身属性中是否具有指定的属性（也就是，是否有指定的键）。")])])},[],!1,null,null,null);t.default=n.exports}}]);