(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{170:function(e,n,a){"use strict";a.r(n);var s=a(0),l=Object(s.a)({},function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"搭建vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#搭建vue","aria-hidden":"true"}},[e._v("#")]),e._v(" 搭建vue")]),e._v(" "),a("blockquote",[a("p",[e._v("package.json")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n  "name": "testWebpack",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "dependencies": {\n    "webpack-cli": "^3.3.9"\n  },\n  "devDependencies": {\n    "@babel/plugin-transform-runtime": "^7.6.2",\n    "babel-core": "^6.26.3",\n    "babel-loader": "^7.1.5",\n    "babel-plugin-transform-runtime": "^6.23.0",\n    "babel-polyfill": "^6.26.0",\n    "babel-preset-env": "^1.7.0",\n    "babel-preset-stage-3": "^6.24.1",\n    "clean-webpack-plugin": "^3.0.0",\n    "cross-env": "^6.0.3",\n    "css-loader": "^3.2.0",\n    "file-loader": "^4.2.0",\n    "happypack": "^5.0.1",\n    "html-webpack-plugin": "^3.2.0",\n    "node-sass": "^4.13.0",\n    "progress-bar-webpack-plugin": "^1.12.1",\n    "speed-measure-webpack-plugin": "^1.3.1",\n    "style-loader": "^1.0.0",\n    "stylus": "^0.54.7",\n    "stylus-loader": "^3.0.2",\n    "uglifyjs-webpack-plugin": "^2.2.0",\n    "vue": "^2.6.10",\n    "vue-loader": "^15.7.1",\n    "vue-style-loader": "^4.1.2",\n    "vue-template-compiler": "^2.6.10",\n    "webpack": "^4.41.2",\n    "webpack-build-notifier": "^2.0.0",\n    "webpack-dashboard": "^3.2.0",\n    "webpack-dev-server": "^3.9.0"\n  },\n  "scripts": {\n    "dev": "cross-env --mode=development webpack-dev-server --hot",\n    "build": "cross-env webpack --mode=production  --progress --hide-modules"\n  },\n  "keywords": [],\n  "author": "",\n  "license": "ISC"\n}\n\n')])])]),a("blockquote",[a("p",[e._v("webpack.config.js")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { resolve } = require('path')\nconst webpack = require('webpack')\nconst { CleanWebpackPlugin } = require('clean-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nlet VueLoaderPlugin = require('vue-loader/lib/plugin');\nconst SpeedMeasurePlugin = require(\"speed-measure-webpack-plugin\");\nconst smp = new SpeedMeasurePlugin();\n// 压缩设置缓存\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin');\n// 多核\n\nconst HappyPack = require('happypack')\nconst os = require('os')\n// 开辟一个线程池\n// 拿到系统CPU的最大核数，happypack 将编译工作灌满所有线程\nconst happyThreadPool = HappyPack.ThreadPool({ size: os.cpus().length })\n\n// 体验\nvar WebpackBuildNotifierPlugin = require('webpack-build-notifier');\nvar ProgressBarPlugin = require('progress-bar-webpack-plugin');\n\n\nconsole.log(1)\nconsole.log(process.env)\nconst config = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        cache: true,\n        parallel: true,\n      }),\n    ],\n  },\n  mode: process.env.NODE_ENV,\n  entry: './src/main.js',\n  output: {\n    path: resolve(__dirname, 'dist'),\n    // chunkFilename: '[name].bundle.js',\n    filename: 'bundle.js'\n  },\n  performance: {\n\n    hints: false\n\n  },\n  optimization: {\n    splitChunks: {\n      chunks: 'all'\n    }\n  },\n  devServer: {\n    port: 7000,\n    historyApiFallback: true\n  },\n  resolve: {\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js'\n    }\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          'vue-style-loader',\n          'css-loader'\n        ]\n      },\n      {\n        test: /\\.styl$/,\n        use: [\n          'vue-style-loader',\n          'css-loader',\n          'stylus-loader'\n        ],\n      },\n      // {\n      //   test: /(\\.jsx|\\.js)$/,\n      //   use: {\n      //     loader: \"babel-loader\"\n      //   },\n      //   exclude: /node_modules/\n      // },\n      {\n        test: /\\.js$/,\n        exclude: /(node_modules|bower_components)/,\n        use: 'happypack/loader?id=js',\n      },\n      {\n        test: /\\.(png|jpg|gif|svg)$/,\n        loader: 'file-loader',\n        options: {\n          name: '[name].[ext]?[hash]'\n        }\n      },\n      { test: /\\.vue$/, loader: 'vue-loader' }\n\n    ]\n  },\n  devtool: '#eval-source-map',\n  plugins: [\n    \n    new VueLoaderPlugin(),\n    new HappyPack({\n      id: 'js',\n      threadPool: happyThreadPool,\n      loaders: [\n        {\n          loader: 'babel-loader',\n        },\n      ],\n    }),\n    new HtmlWebpackPlugin({\n      // filename: 'index.html',//生成的文件名\n      template: './index.html',//指定打包压缩的文件\n      minify: {\n        removeComments: true,//清除注释\n        collapseWhitespace: true//清理空格\n      }\n    }),\n    new CleanWebpackPlugin(),\n    new WebpackBuildNotifierPlugin({\n      title: \"My Project Webpack Build\",\n      // logo: path.resolve(\"./img/favicon.png\"),\n      suppressSuccess: true\n    }),\n    new ProgressBarPlugin()\n  ]\n}\n\nmodule.exports = smp.wrap(config)\n")])])]),a("blockquote",[a("p",[e._v("main.js")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("import Vue from 'vue';\nimport App from './App.vue'\n\nconst root = document.createElement('div') //创建div节点\ndocument.body.appendChild(root)\nnew Vue({\n  render: h => h(App)\n}).$mount(root)\n")])])])])},[],!1,null,null,null);n.default=l.exports}}]);