(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{203:function(t,e,s){"use strict";s.r(e);var n=s(0),i=Object(n.a)({},function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h2",{attrs:{id:"demo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#demo","aria-hidden":"true"}},[this._v("#")]),this._v(" demo")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("class Like extends React.Component {\n    constructor (props) {\n        super(props)\n        // 初始化\n        this.state = {\n            isLikeMe: false\n        }\n        // 新增方法的this强制绑定到组件对象\n        this.handleClick = this.handleClick.bind(this)\n    }\n    // 新增方法：内部this不指向组件，为undefined\n    handleClick () {\n        const isLikeMe = !this.state.isLikeMe\n        this.setState({isLikeMe})\n    }\n    // 重写组件类的方法，所以this指向组件对象\n    render () {\n        const {isLikeMe} = this.state\n        return <h2 onClick={this.handleClick}>{isLikeMe}</h2>\n    }\n    \n}\n")])])])])},[],!1,null,null,null);e.default=i.exports}}]);