(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{179:function(e,r,t){"use strict";t.r(r);var n=t(0),a=Object(n.a)({},function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"一、基础介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、基础介绍","aria-hidden":"true"}},[e._v("#")]),e._v(" 一、基础介绍")]),e._v(" "),t("h2",{attrs:{id:"什么是node-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是node-js","aria-hidden":"true"}},[e._v("#")]),e._v(" 什么是node.js")]),e._v(" "),t("blockquote",[t("ul",[t("li",[e._v("Node.js的本质是一个javascript解析器")]),e._v(" "),t("li",[e._v("Node.js是javascript的运行环境")]),e._v(" "),t("li",[e._v("Node.js是一个服务器程序")]),e._v(" "),t("li",[e._v("Node.js本身使用的是V8引擎")]),e._v(" "),t("li",[e._v("Node.js不是web服务器")])])]),e._v(" "),t("h2",{attrs:{id:"为什么要使用node-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用node-js","aria-hidden":"true"}},[e._v("#")]),e._v(" 为什么要使用node.js")]),e._v(" "),t("blockquote",[t("ul",[t("li",[e._v("为了提供高性能的web服务")]),e._v(" "),t("li",[e._v("IO性能强大")]),e._v(" "),t("li",[e._v("时间处理机制完善")]),e._v(" "),t("li",[e._v("天然能够处理DOM")]),e._v(" "),t("li",[e._v("社区非常活跃，生态圈日趋完善")])])]),e._v(" "),t("h2",{attrs:{id:"node-js的优势在哪里"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-js的优势在哪里","aria-hidden":"true"}},[e._v("#")]),e._v(" node.js的优势在哪里")]),e._v(" "),t("blockquote",[t("ul",[t("li",[e._v("处理大流量数据")]),e._v(" "),t("li",[e._v("适合实时交互的应用")]),e._v(" "),t("li",[e._v("完美支持对象数据库")]),e._v(" "),t("li",[e._v("异步处理大量并发连接")])])]),e._v(" "),t("h1",{attrs:{id:"二、node-js回调函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、node-js回调函数","aria-hidden":"true"}},[e._v("#")]),e._v(" 二、Node.js回调函数")]),e._v(" "),t("h2",{attrs:{id:"什么是回调"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是回调","aria-hidden":"true"}},[e._v("#")]),e._v(" 什么是回调")]),e._v(" "),t("blockquote",[t("ul",[t("li",[e._v("函数调用方式分为三类：同步调用、回调和异步调用。")]),e._v(" "),t("li",[e._v("回调是一种双向调用模式")]),e._v(" "),t("li",[e._v("可以通过回调函数来实现回调")])])]),e._v(" "),t("h2",{attrs:{id:"阻塞与非阻塞"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#阻塞与非阻塞","aria-hidden":"true"}},[e._v("#")]),e._v(" 阻塞与非阻塞")]),e._v(" "),t("blockquote",[t("ul",[t("li",[e._v("阻塞和非阻塞关注的是程序在等待调用结果（消息、返回值）时的状态")]),e._v(" "),t("li",[e._v("阻塞就是做不完不准回来")]),e._v(" "),t("li",[e._v("非阻塞就是你先做，我先看看有其他事没有，完了告诉我一声")])])]),e._v(" "),t("h3",{attrs:{id:"阻塞代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#阻塞代码","aria-hidden":"true"}},[e._v("#")]),e._v(" 阻塞代码")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var fs = require('fs');\nvar data = fs.readFileSync('data.txt');\nconsole.log(data.toString());\n")])])]),t("h3",{attrs:{id:"非阻塞代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#非阻塞代码","aria-hidden":"true"}},[e._v("#")]),e._v(" 非阻塞代码")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var fs = require('fs');\nvar data = fs.readFile('data.txt', function (err, data) {\n\tif (err) {\n\t\treturn console.error(err);\n\t}\n\tconsole.log(data.toString());\n});\nconsole.log('程序执行完毕');\n")])])]),t("h1",{attrs:{id:"三、node-js事件驱动机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、node-js事件驱动机制","aria-hidden":"true"}},[e._v("#")]),e._v(" 三、Node.js事件驱动机制")]),e._v(" "),t("h2",{attrs:{id:"事件处理代码流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件处理代码流程","aria-hidden":"true"}},[e._v("#")]),e._v(" 事件处理代码流程")]),e._v(" "),t("ol",[t("li",[e._v("引入events 对象，创建eventEmitter对象")]),e._v(" "),t("li",[e._v("绑定事件处理程序")]),e._v(" "),t("li",[e._v("触发事件")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("//引入Event模块并创建eventsEmitter对象\nvar events = require('events');\nvar eventEmitter = new events.EventEmitter();\n\n//绑定事件处理函数\nvar connectHandler = function connected() {\n\tconsole.log('connected被调用！');\n}\neventEmitter.on('connection', connectHandler);//完成事件绑定\n//触发事件\neventEmitter.emit('connection');\nconsole.log(''程序执行完毕);\n\n//输出结果\n//connected被调用！\n//程序执行完毕\n")])])]),t("h1",{attrs:{id:"四、node-js模块化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、node-js模块化","aria-hidden":"true"}},[e._v("#")]),e._v(" 四、Node.js模块化")]),e._v(" "),t("h2",{attrs:{id:"模块化的概念与意义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模块化的概念与意义","aria-hidden":"true"}},[e._v("#")]),e._v(" 模块化的概念与意义")]),e._v(" "),t("blockquote",[t("ul",[t("li",[e._v("为了让Node.js的文件可以相互调用,Node.js提供了一个简单的模块系统")]),e._v(" "),t("li",[e._v("模块是Node.js应用程序的基本组成部分")]),e._v(" "),t("li",[e._v("文件和模块是一一对应的。一个Node.js文件就是一个模块")]),e._v(" "),t("li",[e._v("这个文件可能是javascript代码、JSON或者编译过的C/C++拓展。")]),e._v(" "),t("li",[e._v("Node.js中存在4类模块（原生模块和3中文件模块）")])])]),e._v(" "),t("h1",{attrs:{id:"node-js的模块加载方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-js的模块加载方式","aria-hidden":"true"}},[e._v("#")]),e._v(" Node.js的模块加载方式")]),e._v(" "),t("blockquote",[t("ul",[t("li",[e._v("从文件模块缓存中加载")]),e._v(" "),t("li",[e._v("从原生模块加载")]),e._v(" "),t("li",[e._v("从文件加载")])])]),e._v(" "),t("h1",{attrs:{id:"require方法加载模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#require方法加载模块","aria-hidden":"true"}},[e._v("#")]),e._v(" require方法加载模块")]),e._v(" "),t("h2",{attrs:{id:"require方法接受一下几种参数的传递："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#require方法接受一下几种参数的传递：","aria-hidden":"true"}},[e._v("#")]),e._v(" require方法接受一下几种参数的传递：")]),e._v(" "),t("blockquote",[t("ul",[t("li",[e._v("http、fs、path等，原生模块")]),e._v(" "),t("li",[e._v("./mod或../mod，相对路径的文件模块。")]),e._v(" "),t("li",[e._v("/pathtomodule/mod，绝对路径的文件模块。")]),e._v(" "),t("li",[e._v("mod，非原生模块的文件模块")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("//对模块进行导出\nmodule.exports = Hello;\n//调用Hello模块\nvar Hello = require('./hello');\n")])])]),t("h1",{attrs:{id:"六、node-js路由"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、node-js路由","aria-hidden":"true"}},[e._v("#")]),e._v(" 六、Node.js路由")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('server.js\n\nvar http = require("http");\nvar url = require("url");\n\nfunction start(route) {\n    function onRequest(request, response) {\n        var pathname = url.parse(request.url).pathname;\n\n        route(pathname, response);\n    }\n\n    http.createServer(onRequest).listen(8888);\n    console.log("Server has started.");\n}\n\nexports.start = start;\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('router.js\n\nfunction route(pathname, response) {\n    console.log("About to route a request for " + pathname);\n    if (pathname == \'/\') {\n        response.writeHead(200, {\n            "Content-Type": "text/plain"\n        });\n        response.write("Hello World");\n        response.end();\n    } else {\n        response.end(`${pathname}`);\n    }\n}\n\nexports.route = route;\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('index.js\n\nvar server = require("./server");\nvar router = require("./router");\n \nserver.start(router.route);\n')])])]),t("h1",{attrs:{id:"七、node-js全局对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、node-js全局对象","aria-hidden":"true"}},[e._v("#")]),e._v(" 七、Node.js全局对象")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("__filename\n__dirname\nsetTimeout\nclearTimeout\nsetInterval\nconsole\nprocess\n")])])]),t("h1",{attrs:{id:"八、node-js文件系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#八、node-js文件系统","aria-hidden":"true"}},[e._v("#")]),e._v(" 八、Node.js文件系统")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.runoob.com/nodejs/nodejs-fs.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("参照"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"打开文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#打开文件","aria-hidden":"true"}},[e._v("#")]),e._v(" 打开文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var fs = require("fs");\n\n// 异步打开文件\nconsole.log("准备打开文件！");\nfs.open(\'input.txt\', \'r+\', function(err, fd) {\n   if (err) {\n       return console.error(err);\n   }\n  console.log("文件打开成功！");     \n});\n')])])]),t("h2",{attrs:{id:"获取文件信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取文件信息","aria-hidden":"true"}},[e._v("#")]),e._v(" 获取文件信息")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var fs = require("fs");\n\nconsole.log("准备打开文件！");\nfs.stat(\'input.txt\', function (err, stats) {\n   if (err) {\n       return console.error(err);\n   }\n   console.log(stats);\n   console.log("读取文件信息成功！");\n   \n   // 检测文件类型\n   console.log("是否为文件(isFile) ? " + stats.isFile());\n   console.log("是否为目录(isDirectory) ? " + stats.isDirectory());    \n});\n')])])]),t("h2",{attrs:{id:"读取文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#读取文件","aria-hidden":"true"}},[e._v("#")]),e._v(" 读取文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var fs = require("fs");\nvar buf = new Buffer.alloc(1024);\n\nconsole.log("准备打开已存在的文件！");\nfs.open(\'input.txt\', \'r+\', function(err, fd) {\n   if (err) {\n       return console.error(err);\n   }\n   console.log("文件打开成功！");\n   console.log("准备读取文件：");\n   fs.read(fd, buf, 0, buf.length, 0, function(err, bytes){\n      if (err){\n         console.log(err);\n      }\n      console.log(bytes + "  字节被读取");\n      \n      // 仅输出读取的字节\n      if(bytes > 0){\n         console.log(buf.slice(0, bytes).toString());\n      }\n   });\n});\n')])])]),t("h2",{attrs:{id:"写入文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#写入文件","aria-hidden":"true"}},[e._v("#")]),e._v(" 写入文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var fs = require("fs");\n\nconsole.log("准备写入文件");\nfs.writeFile(\'input.txt\', \'我是通 过fs.writeFile 写入文件的内容\',  function(err) {\n   if (err) {\n       return console.error(err);\n   }\n   console.log("数据写入成功！");\n   console.log("--------我是分割线-------------")\n   console.log("读取写入的数据！");\n   fs.readFile(\'input.txt\', function (err, data) {\n      if (err) {\n         return console.error(err);\n      }\n      console.log("异步读取文件数据: " + data.toString());\n   });\n});\n')])])]),t("h2",{attrs:{id:"关闭文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关闭文件","aria-hidden":"true"}},[e._v("#")]),e._v(" 关闭文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var fs = require("fs");\nvar buf = new Buffer.alloc(1024);\n\nconsole.log("准备打开文件！");\nfs.open(\'input.txt\', \'r+\', function(err, fd) {\n   if (err) {\n       return console.error(err);\n   }\n   console.log("文件打开成功！");\n   console.log("准备读取文件！");\n   fs.read(fd, buf, 0, buf.length, 0, function(err, bytes){\n      if (err){\n         console.log(err);\n      }\n\n      // 仅输出读取的字节\n      if(bytes > 0){\n         console.log(buf.slice(0, bytes).toString());\n      }\n\n      // 关闭文件\n      fs.close(fd, function(err){\n         if (err){\n            console.log(err);\n         } \n         console.log("文件关闭成功");\n      });\n   });\n});\n')])])]),t("h2",{attrs:{id:"截取文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#截取文件","aria-hidden":"true"}},[e._v("#")]),e._v(" 截取文件")]),e._v(" "),t("h2",{attrs:{id:"删除文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除文件","aria-hidden":"true"}},[e._v("#")]),e._v(" 删除文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var fs = require("fs");\n\nconsole.log("准备删除文件！");\nfs.unlink(\'input.txt\', function(err) {\n   if (err) {\n       return console.error(err);\n   }\n   console.log("文件删除成功！");\n});\n')])])]),t("h2",{attrs:{id:"创建目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建目录","aria-hidden":"true"}},[e._v("#")]),e._v(" 创建目录")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var fs = require("fs");\n// tmp 目录必须存在\nconsole.log("创建目录 /tmp/test/");\nfs.mkdir("/tmp/test/",function(err){\n   if (err) {\n       return console.error(err);\n   }\n   console.log("目录创建成功。");\n});\n')])])]),t("h2",{attrs:{id:"读取目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#读取目录","aria-hidden":"true"}},[e._v("#")]),e._v(" 读取目录")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var fs = require("fs");\n\nconsole.log("查看 /tmp 目录");\nfs.readdir("/tmp/",function(err, files){\n   if (err) {\n       return console.error(err);\n   }\n   files.forEach( function (file){\n       console.log( file );\n   });\n});\n')])])]),t("h2",{attrs:{id:"删除目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除目录","aria-hidden":"true"}},[e._v("#")]),e._v(" 删除目录")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var fs = require("fs");\n// 执行前创建一个空的 /tmp/test 目录\nconsole.log("准备删除目录 /tmp/test");\nfs.rmdir("/tmp/test",function(err){\n   if (err) {\n       return console.error(err);\n   }\n   console.log("读取 /tmp 目录");\n   fs.readdir("/tmp/",function(err, files){\n      if (err) {\n          return console.error(err);\n      }\n      files.forEach( function (file){\n          console.log( file );\n      });\n   });\n});\n')])])])])},[],!1,null,null,null);r.default=a.exports}}]);