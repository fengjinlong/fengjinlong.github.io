(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{201:function(a,t,s){"use strict";s.r(t);var e=s(0),r=Object(e.a)({},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"json-是一种轻量级数据格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-是一种轻量级数据格式","aria-hidden":"true"}},[a._v("#")]),a._v(" JSON 是一种轻量级数据格式")]),a._v(" "),s("h2",{attrs:{id:"语法-三种类型的值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法-三种类型的值","aria-hidden":"true"}},[a._v("#")]),a._v(" 语法 三种类型的值")]),a._v(" "),s("blockquote",[s("ul",[s("li",[a._v("简单值 使用与js相同的语法，但是不支持undefined.")])])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('5 "hello world"\n\nJSON 必须用双引号\n')])])]),s("blockquote",[s("ul",[s("li",[a._v("对象")])])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("JSON对象与js对象区别\n1. JSON没有申明变量\n2. 没有末尾分号\n3. JSON属性必须加双引号\n")])])]),s("blockquote",[s("ul",[s("li",[a._v("数组")])])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("JSON 数组也没有变量和分号\n\n")])])]),s("blockquote",[s("ul",[s("li",[a._v("JSON 不支持变量，函数，对象实例")])])]),a._v(" "),s("h2",{attrs:{id:"解析与序列化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析与序列化","aria-hidden":"true"}},[a._v("#")]),a._v(" 解析与序列化")]),a._v(" "),s("h3",{attrs:{id:"json对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json对象","aria-hidden":"true"}},[a._v("#")]),a._v(" JSON对象")]),a._v(" "),s("blockquote",[s("ul",[s("li",[a._v("stringify() 把js对象序列化为JSON字符串")])])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var book ={\n  name: 'js'\n}\nvar jsonText = JSON.stringify(book);\n\n")])])]),s("blockquote",[s("ul",[s("li",[a._v("parse() 把JSON字符串转换成js值")])])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var bookCopy = JSON.parse(jsonText)\nbook 与 bookCopy 没有任何关系\n")])])]),s("h3",{attrs:{id:"序列化选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#序列化选项","aria-hidden":"true"}},[a._v("#")]),a._v(" 序列化选项")]),a._v(" "),s("ol",[s("li",[a._v("JSON.stringify(jsObj, parm1, parm2) 接受两个参数")])]),a._v(" "),s("blockquote",[s("ul",[s("li",[a._v("parm1 过滤器，可以为数组或函数")])])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('var book = {\n  title: \'js\',\n  year: 2011\n}\nvar jsonText = JSON.stringify(book, ["title"]) \n// {"title": "js"}\n\n当parm1，函数返回undefined，那么这个属性会被忽略\n')])])]),s("blockquote",[s("ul",[s("li",[a._v("parm2 JSON字符串保留的缩进")])])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("控制结果的缩进和空白，最大为10，超过自动转换为10，也可以使用字符串，同样长度最大为10\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("把一个对象传入JSON.stringify(),序列对象顺序")])]),a._v(" "),s("blockquote",[s("ul",[s("li",[a._v("如果存在toJson且能取到值，则调用该方法。否则，按默认顺序执行序列化")]),a._v(" "),s("li",[a._v("如果有第二个参数，应用这个函数过滤器")]),a._v(" "),s("li",[a._v("对上一步返回的每个值进行相应的序列化")]),a._v(" "),s("li",[a._v("如果存在第三个参数，进行格式化")])])]),a._v(" "),s("h2",{attrs:{id:"解析选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析选项","aria-hidden":"true"}},[a._v("#")]),a._v(" 解析选项")]),a._v(" "),s("ol",[s("li",[a._v("JSON.parse() 接受另外一个函数参数（还原函数），在每个键值对上执行。如果返回undefined,删除相应的键")])])])},[],!1,null,null,null);t.default=r.exports}}]);